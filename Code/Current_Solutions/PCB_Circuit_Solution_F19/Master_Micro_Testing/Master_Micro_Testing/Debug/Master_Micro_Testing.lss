
Master_Micro_Testing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004a  00800100  00000c8e  00000d22  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c8e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  0080014a  0080014a  00000d6c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d6c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000220  00000000  00000000  00000dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002e1f  00000000  00000000  00000ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011af  00000000  00000000  00003e17  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001205  00000000  00000000  00004fc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007a8  00000000  00000000  000061cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cd9  00000000  00000000  00006974  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000026bf  00000000  00000000  0000764d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000238  00000000  00000000  00009d0c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
   2:	43 c0       	rjmp	.+134    	; 0x8a <__bad_interrupt>
   4:	42 c0       	rjmp	.+132    	; 0x8a <__bad_interrupt>
   6:	41 c0       	rjmp	.+130    	; 0x8a <__bad_interrupt>
   8:	40 c0       	rjmp	.+128    	; 0x8a <__bad_interrupt>
   a:	3f c0       	rjmp	.+126    	; 0x8a <__bad_interrupt>
   c:	3e c0       	rjmp	.+124    	; 0x8a <__bad_interrupt>
   e:	3d c0       	rjmp	.+122    	; 0x8a <__bad_interrupt>
  10:	3c c0       	rjmp	.+120    	; 0x8a <__bad_interrupt>
  12:	3b c0       	rjmp	.+118    	; 0x8a <__bad_interrupt>
  14:	3a c0       	rjmp	.+116    	; 0x8a <__bad_interrupt>
  16:	48 c2       	rjmp	.+1168   	; 0x4a8 <__vector_11>
  18:	38 c0       	rjmp	.+112    	; 0x8a <__bad_interrupt>
  1a:	37 c0       	rjmp	.+110    	; 0x8a <__bad_interrupt>
  1c:	36 c0       	rjmp	.+108    	; 0x8a <__bad_interrupt>
  1e:	35 c0       	rjmp	.+106    	; 0x8a <__bad_interrupt>
  20:	34 c0       	rjmp	.+104    	; 0x8a <__bad_interrupt>
  22:	33 c0       	rjmp	.+102    	; 0x8a <__bad_interrupt>
  24:	32 c0       	rjmp	.+100    	; 0x8a <__bad_interrupt>
  26:	31 c0       	rjmp	.+98     	; 0x8a <__bad_interrupt>
  28:	30 c0       	rjmp	.+96     	; 0x8a <__bad_interrupt>
  2a:	2f c0       	rjmp	.+94     	; 0x8a <__bad_interrupt>
  2c:	2e c0       	rjmp	.+92     	; 0x8a <__bad_interrupt>
  2e:	2d c0       	rjmp	.+90     	; 0x8a <__bad_interrupt>
  30:	2c c0       	rjmp	.+88     	; 0x8a <__bad_interrupt>
  32:	2b c0       	rjmp	.+86     	; 0x8a <__bad_interrupt>
  34:	44 c0       	rjmp	.+136    	; 0xbe <readADC+0xe>
  36:	46 c0       	rjmp	.+140    	; 0xc4 <readADC+0x14>
  38:	49 c0       	rjmp	.+146    	; 0xcc <readADC+0x1c>
  3a:	4c c0       	rjmp	.+152    	; 0xd4 <readADC+0x24>
  3c:	4f c0       	rjmp	.+158    	; 0xdc <readADC+0x2c>
  3e:	52 c0       	rjmp	.+164    	; 0xe4 <readADC+0x34>
  40:	55 c0       	rjmp	.+170    	; 0xec <readADC+0x3c>
  42:	58 c0       	rjmp	.+176    	; 0xf4 <readADC+0x44>
  44:	86 c0       	rjmp	.+268    	; 0x152 <set_multiplexer_channel_with_pins+0x1a>
  46:	a8 c0       	rjmp	.+336    	; 0x198 <set_multiplexer_channel_with_pins+0x60>
  48:	c7 c0       	rjmp	.+398    	; 0x1d8 <set_multiplexer_channel_with_pins+0xa0>
  4a:	e7 c0       	rjmp	.+462    	; 0x21a <set_multiplexer_channel_with_pins+0xe2>
  4c:	05 c1       	rjmp	.+522    	; 0x258 <set_multiplexer_channel_with_pins+0x120>
  4e:	26 c1       	rjmp	.+588    	; 0x29c <set_multiplexer_channel_with_pins+0x164>
  50:	44 c1       	rjmp	.+648    	; 0x2da <set_multiplexer_channel_with_pins+0x1a2>
  52:	63 c1       	rjmp	.+710    	; 0x31a <set_multiplexer_channel_with_pins+0x1e2>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf ef       	ldi	r28, 0xFF	; 255
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	11 e0       	ldi	r17, 0x01	; 1
  62:	a0 e0       	ldi	r26, 0x00	; 0
  64:	b1 e0       	ldi	r27, 0x01	; 1
  66:	ee e8       	ldi	r30, 0x8E	; 142
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 34       	cpi	r26, 0x4A	; 74
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	aa e4       	ldi	r26, 0x4A	; 74
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 35       	cpi	r26, 0x52	; 82
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e d2       	rcall	.+1052   	; 0x4a4 <main>
  88:	00 c6       	rjmp	.+3072   	; 0xc8a <_exit>

0000008a <__bad_interrupt>:
  8a:	ba cf       	rjmp	.-140    	; 0x0 <__vectors>

0000008c <ADC2DAC>:
		write2DAC(dac_on_value);
	}
	else
	{
		//Turn the dac on to its minimum value.
		write2DAC(dac_off_value);
  8c:	bc 01       	movw	r22, r24
  8e:	80 e0       	ldi	r24, 0x00	; 0
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	97 d4       	rcall	.+2350   	; 0x9c2 <__floatunsisf>
  94:	26 e0       	ldi	r18, 0x06	; 6
  96:	38 e1       	ldi	r19, 0x18	; 24
  98:	40 e8       	ldi	r20, 0x80	; 128
  9a:	50 e4       	ldi	r21, 0x40	; 64
  9c:	4b d5       	rcall	.+2710   	; 0xb34 <__mulsf3>
  9e:	ad d5       	rcall	.+2906   	; 0xbfa <round>
  a0:	64 d4       	rcall	.+2248   	; 0x96a <__fixunssfsi>
  a2:	cb 01       	movw	r24, r22
  a4:	61 15       	cp	r22, r1
  a6:	70 41       	sbci	r23, 0x10	; 16
  a8:	10 f0       	brcs	.+4      	; 0xae <ADC2DAC+0x22>
  aa:	8f ef       	ldi	r24, 0xFF	; 255
  ac:	9f e0       	ldi	r25, 0x0F	; 15
  ae:	08 95       	ret

000000b0 <readADC>:
  b0:	88 30       	cpi	r24, 0x08	; 8
  b2:	91 05       	cpc	r25, r1
  b4:	10 f5       	brcc	.+68     	; 0xfa <readADC+0x4a>
  b6:	fc 01       	movw	r30, r24
  b8:	e6 5e       	subi	r30, 0xE6	; 230
  ba:	ff 4f       	sbci	r31, 0xFF	; 255
  bc:	09 94       	ijmp
  be:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__EEPROM_REGION_LENGTH__+0x7f007c>
  c2:	1b c0       	rjmp	.+54     	; 0xfa <readADC+0x4a>
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__EEPROM_REGION_LENGTH__+0x7f007c>
  ca:	17 c0       	rjmp	.+46     	; 0xfa <readADC+0x4a>
  cc:	82 e0       	ldi	r24, 0x02	; 2
  ce:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__EEPROM_REGION_LENGTH__+0x7f007c>
  d2:	13 c0       	rjmp	.+38     	; 0xfa <readADC+0x4a>
  d4:	83 e0       	ldi	r24, 0x03	; 3
  d6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__EEPROM_REGION_LENGTH__+0x7f007c>
  da:	0f c0       	rjmp	.+30     	; 0xfa <readADC+0x4a>
  dc:	84 e0       	ldi	r24, 0x04	; 4
  de:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__EEPROM_REGION_LENGTH__+0x7f007c>
  e2:	0b c0       	rjmp	.+22     	; 0xfa <readADC+0x4a>
  e4:	85 e0       	ldi	r24, 0x05	; 5
  e6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__EEPROM_REGION_LENGTH__+0x7f007c>
  ea:	07 c0       	rjmp	.+14     	; 0xfa <readADC+0x4a>
  ec:	86 e0       	ldi	r24, 0x06	; 6
  ee:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__EEPROM_REGION_LENGTH__+0x7f007c>
  f2:	03 c0       	rjmp	.+6      	; 0xfa <readADC+0x4a>
  f4:	87 e0       	ldi	r24, 0x07	; 7
  f6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__EEPROM_REGION_LENGTH__+0x7f007c>
  fa:	ea e7       	ldi	r30, 0x7A	; 122
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	80 81       	ld	r24, Z
 100:	80 64       	ori	r24, 0x40	; 64
 102:	80 83       	st	Z, r24
 104:	80 81       	ld	r24, Z
 106:	86 fd       	sbrc	r24, 6
 108:	fd cf       	rjmp	.-6      	; 0x104 <readADC+0x54>
 10a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__EEPROM_REGION_LENGTH__+0x7f0078>
 10e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__EEPROM_REGION_LENGTH__+0x7f0079>
 112:	08 95       	ret

00000114 <write2DAC>:
 114:	cf 93       	push	r28
 116:	df 93       	push	r29
 118:	ec 01       	movw	r28, r24
 11a:	88 27       	eor	r24, r24
 11c:	9f 70       	andi	r25, 0x0F	; 15
 11e:	2a 98       	cbi	0x05, 2	; 5
 120:	80 e3       	ldi	r24, 0x30	; 48
 122:	89 0f       	add	r24, r25
 124:	b5 d3       	rcall	.+1898   	; 0x890 <spi_write>
 126:	8c 2f       	mov	r24, r28
 128:	b3 d3       	rcall	.+1894   	; 0x890 <spi_write>
 12a:	2a 9a       	sbi	0x05, 2	; 5
 12c:	29 98       	cbi	0x05, 1	; 5
 12e:	00 c0       	rjmp	.+0      	; 0x130 <write2DAC+0x1c>
 130:	29 9a       	sbi	0x05, 1	; 5
 132:	df 91       	pop	r29
 134:	cf 91       	pop	r28
 136:	08 95       	ret

00000138 <set_multiplexer_channel_with_pins>:
 138:	cf 93       	push	r28
 13a:	df 93       	push	r29
 13c:	dc 01       	movw	r26, r24
 13e:	eb 01       	movw	r28, r22
 140:	50 e0       	ldi	r21, 0x00	; 0
 142:	48 30       	cpi	r20, 0x08	; 8
 144:	51 05       	cpc	r21, r1
 146:	08 f0       	brcs	.+2      	; 0x14a <set_multiplexer_channel_with_pins+0x12>
 148:	05 c1       	rjmp	.+522    	; 0x354 <set_multiplexer_channel_with_pins+0x21c>
 14a:	fa 01       	movw	r30, r20
 14c:	ee 5d       	subi	r30, 0xDE	; 222
 14e:	ff 4f       	sbci	r31, 0xFF	; 255
 150:	09 94       	ijmp
 152:	41 e0       	ldi	r20, 0x01	; 1
 154:	50 e0       	ldi	r21, 0x00	; 0
 156:	ca 01       	movw	r24, r20
 158:	08 80       	ld	r0, Y
 15a:	02 c0       	rjmp	.+4      	; 0x160 <set_multiplexer_channel_with_pins+0x28>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	0a 94       	dec	r0
 162:	e2 f7       	brpl	.-8      	; 0x15c <set_multiplexer_channel_with_pins+0x24>
 164:	80 95       	com	r24
 166:	2c 91       	ld	r18, X
 168:	98 2f       	mov	r25, r24
 16a:	92 23       	and	r25, r18
 16c:	9c 93       	st	X, r25
 16e:	9a 01       	movw	r18, r20
 170:	09 80       	ldd	r0, Y+1	; 0x01
 172:	02 c0       	rjmp	.+4      	; 0x178 <set_multiplexer_channel_with_pins+0x40>
 174:	22 0f       	add	r18, r18
 176:	33 1f       	adc	r19, r19
 178:	0a 94       	dec	r0
 17a:	e2 f7       	brpl	.-8      	; 0x174 <set_multiplexer_channel_with_pins+0x3c>
 17c:	82 2f       	mov	r24, r18
 17e:	80 95       	com	r24
 180:	89 23       	and	r24, r25
 182:	8c 93       	st	X, r24
 184:	0a 80       	ldd	r0, Y+2	; 0x02
 186:	02 c0       	rjmp	.+4      	; 0x18c <set_multiplexer_channel_with_pins+0x54>
 188:	44 0f       	add	r20, r20
 18a:	55 1f       	adc	r21, r21
 18c:	0a 94       	dec	r0
 18e:	e2 f7       	brpl	.-8      	; 0x188 <set_multiplexer_channel_with_pins+0x50>
 190:	40 95       	com	r20
 192:	84 23       	and	r24, r20
 194:	8c 93       	st	X, r24
 196:	de c0       	rjmp	.+444    	; 0x354 <set_multiplexer_channel_with_pins+0x21c>
 198:	21 e0       	ldi	r18, 0x01	; 1
 19a:	30 e0       	ldi	r19, 0x00	; 0
 19c:	c9 01       	movw	r24, r18
 19e:	08 80       	ld	r0, Y
 1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <set_multiplexer_channel_with_pins+0x6e>
 1a2:	88 0f       	add	r24, r24
 1a4:	99 1f       	adc	r25, r25
 1a6:	0a 94       	dec	r0
 1a8:	e2 f7       	brpl	.-8      	; 0x1a2 <set_multiplexer_channel_with_pins+0x6a>
 1aa:	9c 91       	ld	r25, X
 1ac:	89 2b       	or	r24, r25
 1ae:	8c 93       	st	X, r24
 1b0:	a9 01       	movw	r20, r18
 1b2:	09 80       	ldd	r0, Y+1	; 0x01
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <set_multiplexer_channel_with_pins+0x82>
 1b6:	44 0f       	add	r20, r20
 1b8:	55 1f       	adc	r21, r21
 1ba:	0a 94       	dec	r0
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <set_multiplexer_channel_with_pins+0x7e>
 1be:	40 95       	com	r20
 1c0:	84 23       	and	r24, r20
 1c2:	8c 93       	st	X, r24
 1c4:	0a 80       	ldd	r0, Y+2	; 0x02
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <set_multiplexer_channel_with_pins+0x94>
 1c8:	22 0f       	add	r18, r18
 1ca:	33 1f       	adc	r19, r19
 1cc:	0a 94       	dec	r0
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <set_multiplexer_channel_with_pins+0x90>
 1d0:	20 95       	com	r18
 1d2:	82 23       	and	r24, r18
 1d4:	8c 93       	st	X, r24
 1d6:	be c0       	rjmp	.+380    	; 0x354 <set_multiplexer_channel_with_pins+0x21c>
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	9c 01       	movw	r18, r24
 1de:	08 80       	ld	r0, Y
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <set_multiplexer_channel_with_pins+0xae>
 1e2:	22 0f       	add	r18, r18
 1e4:	33 1f       	adc	r19, r19
 1e6:	0a 94       	dec	r0
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <set_multiplexer_channel_with_pins+0xaa>
 1ea:	20 95       	com	r18
 1ec:	3c 91       	ld	r19, X
 1ee:	42 2f       	mov	r20, r18
 1f0:	43 23       	and	r20, r19
 1f2:	4c 93       	st	X, r20
 1f4:	9c 01       	movw	r18, r24
 1f6:	09 80       	ldd	r0, Y+1	; 0x01
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <set_multiplexer_channel_with_pins+0xc6>
 1fa:	22 0f       	add	r18, r18
 1fc:	33 1f       	adc	r19, r19
 1fe:	0a 94       	dec	r0
 200:	e2 f7       	brpl	.-8      	; 0x1fa <set_multiplexer_channel_with_pins+0xc2>
 202:	24 2b       	or	r18, r20
 204:	2c 93       	st	X, r18
 206:	0a 80       	ldd	r0, Y+2	; 0x02
 208:	02 c0       	rjmp	.+4      	; 0x20e <set_multiplexer_channel_with_pins+0xd6>
 20a:	88 0f       	add	r24, r24
 20c:	99 1f       	adc	r25, r25
 20e:	0a 94       	dec	r0
 210:	e2 f7       	brpl	.-8      	; 0x20a <set_multiplexer_channel_with_pins+0xd2>
 212:	80 95       	com	r24
 214:	82 23       	and	r24, r18
 216:	8c 93       	st	X, r24
 218:	9d c0       	rjmp	.+314    	; 0x354 <set_multiplexer_channel_with_pins+0x21c>
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	9c 01       	movw	r18, r24
 220:	08 80       	ld	r0, Y
 222:	02 c0       	rjmp	.+4      	; 0x228 <set_multiplexer_channel_with_pins+0xf0>
 224:	22 0f       	add	r18, r18
 226:	33 1f       	adc	r19, r19
 228:	0a 94       	dec	r0
 22a:	e2 f7       	brpl	.-8      	; 0x224 <set_multiplexer_channel_with_pins+0xec>
 22c:	4c 91       	ld	r20, X
 22e:	42 2b       	or	r20, r18
 230:	4c 93       	st	X, r20
 232:	9c 01       	movw	r18, r24
 234:	09 80       	ldd	r0, Y+1	; 0x01
 236:	02 c0       	rjmp	.+4      	; 0x23c <set_multiplexer_channel_with_pins+0x104>
 238:	22 0f       	add	r18, r18
 23a:	33 1f       	adc	r19, r19
 23c:	0a 94       	dec	r0
 23e:	e2 f7       	brpl	.-8      	; 0x238 <set_multiplexer_channel_with_pins+0x100>
 240:	24 2b       	or	r18, r20
 242:	2c 93       	st	X, r18
 244:	0a 80       	ldd	r0, Y+2	; 0x02
 246:	02 c0       	rjmp	.+4      	; 0x24c <set_multiplexer_channel_with_pins+0x114>
 248:	88 0f       	add	r24, r24
 24a:	99 1f       	adc	r25, r25
 24c:	0a 94       	dec	r0
 24e:	e2 f7       	brpl	.-8      	; 0x248 <set_multiplexer_channel_with_pins+0x110>
 250:	80 95       	com	r24
 252:	82 23       	and	r24, r18
 254:	8c 93       	st	X, r24
 256:	7e c0       	rjmp	.+252    	; 0x354 <set_multiplexer_channel_with_pins+0x21c>
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	9c 01       	movw	r18, r24
 25e:	08 80       	ld	r0, Y
 260:	02 c0       	rjmp	.+4      	; 0x266 <set_multiplexer_channel_with_pins+0x12e>
 262:	22 0f       	add	r18, r18
 264:	33 1f       	adc	r19, r19
 266:	0a 94       	dec	r0
 268:	e2 f7       	brpl	.-8      	; 0x262 <set_multiplexer_channel_with_pins+0x12a>
 26a:	20 95       	com	r18
 26c:	4c 91       	ld	r20, X
 26e:	32 2f       	mov	r19, r18
 270:	34 23       	and	r19, r20
 272:	3c 93       	st	X, r19
 274:	ac 01       	movw	r20, r24
 276:	09 80       	ldd	r0, Y+1	; 0x01
 278:	02 c0       	rjmp	.+4      	; 0x27e <set_multiplexer_channel_with_pins+0x146>
 27a:	44 0f       	add	r20, r20
 27c:	55 1f       	adc	r21, r21
 27e:	0a 94       	dec	r0
 280:	e2 f7       	brpl	.-8      	; 0x27a <set_multiplexer_channel_with_pins+0x142>
 282:	24 2f       	mov	r18, r20
 284:	20 95       	com	r18
 286:	23 23       	and	r18, r19
 288:	2c 93       	st	X, r18
 28a:	0a 80       	ldd	r0, Y+2	; 0x02
 28c:	02 c0       	rjmp	.+4      	; 0x292 <set_multiplexer_channel_with_pins+0x15a>
 28e:	88 0f       	add	r24, r24
 290:	99 1f       	adc	r25, r25
 292:	0a 94       	dec	r0
 294:	e2 f7       	brpl	.-8      	; 0x28e <set_multiplexer_channel_with_pins+0x156>
 296:	82 2b       	or	r24, r18
 298:	8c 93       	st	X, r24
 29a:	5c c0       	rjmp	.+184    	; 0x354 <set_multiplexer_channel_with_pins+0x21c>
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	9c 01       	movw	r18, r24
 2a2:	08 80       	ld	r0, Y
 2a4:	02 c0       	rjmp	.+4      	; 0x2aa <set_multiplexer_channel_with_pins+0x172>
 2a6:	22 0f       	add	r18, r18
 2a8:	33 1f       	adc	r19, r19
 2aa:	0a 94       	dec	r0
 2ac:	e2 f7       	brpl	.-8      	; 0x2a6 <set_multiplexer_channel_with_pins+0x16e>
 2ae:	3c 91       	ld	r19, X
 2b0:	23 2b       	or	r18, r19
 2b2:	2c 93       	st	X, r18
 2b4:	ac 01       	movw	r20, r24
 2b6:	09 80       	ldd	r0, Y+1	; 0x01
 2b8:	02 c0       	rjmp	.+4      	; 0x2be <set_multiplexer_channel_with_pins+0x186>
 2ba:	44 0f       	add	r20, r20
 2bc:	55 1f       	adc	r21, r21
 2be:	0a 94       	dec	r0
 2c0:	e2 f7       	brpl	.-8      	; 0x2ba <set_multiplexer_channel_with_pins+0x182>
 2c2:	40 95       	com	r20
 2c4:	24 23       	and	r18, r20
 2c6:	2c 93       	st	X, r18
 2c8:	0a 80       	ldd	r0, Y+2	; 0x02
 2ca:	02 c0       	rjmp	.+4      	; 0x2d0 <set_multiplexer_channel_with_pins+0x198>
 2cc:	88 0f       	add	r24, r24
 2ce:	99 1f       	adc	r25, r25
 2d0:	0a 94       	dec	r0
 2d2:	e2 f7       	brpl	.-8      	; 0x2cc <set_multiplexer_channel_with_pins+0x194>
 2d4:	82 2b       	or	r24, r18
 2d6:	8c 93       	st	X, r24
 2d8:	3d c0       	rjmp	.+122    	; 0x354 <set_multiplexer_channel_with_pins+0x21c>
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	9c 01       	movw	r18, r24
 2e0:	08 80       	ld	r0, Y
 2e2:	02 c0       	rjmp	.+4      	; 0x2e8 <set_multiplexer_channel_with_pins+0x1b0>
 2e4:	22 0f       	add	r18, r18
 2e6:	33 1f       	adc	r19, r19
 2e8:	0a 94       	dec	r0
 2ea:	e2 f7       	brpl	.-8      	; 0x2e4 <set_multiplexer_channel_with_pins+0x1ac>
 2ec:	20 95       	com	r18
 2ee:	3c 91       	ld	r19, X
 2f0:	42 2f       	mov	r20, r18
 2f2:	43 23       	and	r20, r19
 2f4:	4c 93       	st	X, r20
 2f6:	9c 01       	movw	r18, r24
 2f8:	09 80       	ldd	r0, Y+1	; 0x01
 2fa:	02 c0       	rjmp	.+4      	; 0x300 <set_multiplexer_channel_with_pins+0x1c8>
 2fc:	22 0f       	add	r18, r18
 2fe:	33 1f       	adc	r19, r19
 300:	0a 94       	dec	r0
 302:	e2 f7       	brpl	.-8      	; 0x2fc <set_multiplexer_channel_with_pins+0x1c4>
 304:	24 2b       	or	r18, r20
 306:	2c 93       	st	X, r18
 308:	0a 80       	ldd	r0, Y+2	; 0x02
 30a:	02 c0       	rjmp	.+4      	; 0x310 <set_multiplexer_channel_with_pins+0x1d8>
 30c:	88 0f       	add	r24, r24
 30e:	99 1f       	adc	r25, r25
 310:	0a 94       	dec	r0
 312:	e2 f7       	brpl	.-8      	; 0x30c <set_multiplexer_channel_with_pins+0x1d4>
 314:	82 2b       	or	r24, r18
 316:	8c 93       	st	X, r24
 318:	1d c0       	rjmp	.+58     	; 0x354 <set_multiplexer_channel_with_pins+0x21c>
 31a:	81 e0       	ldi	r24, 0x01	; 1
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	9c 01       	movw	r18, r24
 320:	08 80       	ld	r0, Y
 322:	02 c0       	rjmp	.+4      	; 0x328 <set_multiplexer_channel_with_pins+0x1f0>
 324:	22 0f       	add	r18, r18
 326:	33 1f       	adc	r19, r19
 328:	0a 94       	dec	r0
 32a:	e2 f7       	brpl	.-8      	; 0x324 <set_multiplexer_channel_with_pins+0x1ec>
 32c:	4c 91       	ld	r20, X
 32e:	42 2b       	or	r20, r18
 330:	4c 93       	st	X, r20
 332:	9c 01       	movw	r18, r24
 334:	09 80       	ldd	r0, Y+1	; 0x01
 336:	02 c0       	rjmp	.+4      	; 0x33c <set_multiplexer_channel_with_pins+0x204>
 338:	22 0f       	add	r18, r18
 33a:	33 1f       	adc	r19, r19
 33c:	0a 94       	dec	r0
 33e:	e2 f7       	brpl	.-8      	; 0x338 <set_multiplexer_channel_with_pins+0x200>
 340:	24 2b       	or	r18, r20
 342:	2c 93       	st	X, r18
 344:	0a 80       	ldd	r0, Y+2	; 0x02
 346:	02 c0       	rjmp	.+4      	; 0x34c <set_multiplexer_channel_with_pins+0x214>
 348:	88 0f       	add	r24, r24
 34a:	99 1f       	adc	r25, r25
 34c:	0a 94       	dec	r0
 34e:	e2 f7       	brpl	.-8      	; 0x348 <set_multiplexer_channel_with_pins+0x210>
 350:	82 2b       	or	r24, r18
 352:	8c 93       	st	X, r24
 354:	df 91       	pop	r29
 356:	cf 91       	pop	r28
 358:	08 95       	ret

0000035a <set_multiplexer_channel>:
 35a:	cf 93       	push	r28
 35c:	c8 2f       	mov	r28, r24
 35e:	68 2f       	mov	r22, r24
 360:	66 95       	lsr	r22
 362:	66 95       	lsr	r22
 364:	66 95       	lsr	r22
 366:	70 e0       	ldi	r23, 0x00	; 0
 368:	80 e0       	ldi	r24, 0x00	; 0
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	2c d3       	rcall	.+1624   	; 0x9c6 <__floatsisf>
 36e:	66 d3       	rcall	.+1740   	; 0xa3c <floor>
 370:	fc d2       	rcall	.+1528   	; 0x96a <__fixunssfsi>
 372:	46 2f       	mov	r20, r22
 374:	65 e4       	ldi	r22, 0x45	; 69
 376:	71 e0       	ldi	r23, 0x01	; 1
 378:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 37c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 380:	db de       	rcall	.-586    	; 0x138 <set_multiplexer_channel_with_pins>
 382:	4c 2f       	mov	r20, r28
 384:	47 70       	andi	r20, 0x07	; 7
 386:	62 e4       	ldi	r22, 0x42	; 66
 388:	71 e0       	ldi	r23, 0x01	; 1
 38a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 38e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 392:	d2 de       	rcall	.-604    	; 0x138 <set_multiplexer_channel_with_pins>
 394:	82 e0       	ldi	r24, 0x02	; 2
 396:	8a 95       	dec	r24
 398:	f1 f7       	brne	.-4      	; 0x396 <set_multiplexer_channel+0x3c>
 39a:	00 c0       	rjmp	.+0      	; 0x39c <set_multiplexer_channel+0x42>
 39c:	cf 91       	pop	r28
 39e:	08 95       	ret

000003a0 <GetSensorData>:
 3a0:	af 92       	push	r10
 3a2:	bf 92       	push	r11
 3a4:	cf 92       	push	r12
 3a6:	df 92       	push	r13
 3a8:	ef 92       	push	r14
 3aa:	ff 92       	push	r15
 3ac:	1f 93       	push	r17
 3ae:	cf 93       	push	r28
 3b0:	df 93       	push	r29
 3b2:	00 d0       	rcall	.+0      	; 0x3b4 <GetSensorData+0x14>
 3b4:	00 d0       	rcall	.+0      	; 0x3b6 <GetSensorData+0x16>
 3b6:	cd b7       	in	r28, 0x3d	; 61
 3b8:	de b7       	in	r29, 0x3e	; 62
 3ba:	fc 01       	movw	r30, r24
 3bc:	ee 58       	subi	r30, 0x8E	; 142
 3be:	ff 4f       	sbci	r31, 0xFF	; 255
 3c0:	10 82       	st	Z, r1
 3c2:	5c 01       	movw	r10, r24
 3c4:	6c 01       	movw	r12, r24
 3c6:	26 e2       	ldi	r18, 0x26	; 38
 3c8:	c2 0e       	add	r12, r18
 3ca:	d1 1c       	adc	r13, r1
 3cc:	10 e0       	ldi	r17, 0x00	; 0
 3ce:	7f 01       	movw	r14, r30
 3d0:	81 2f       	mov	r24, r17
 3d2:	c3 df       	rcall	.-122    	; 0x35a <set_multiplexer_channel>
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	6b de       	rcall	.-810    	; 0xb0 <readADC>
 3da:	9a 83       	std	Y+2, r25	; 0x02
 3dc:	89 83       	std	Y+1, r24	; 0x01
 3de:	89 81       	ldd	r24, Y+1	; 0x01
 3e0:	9a 81       	ldd	r25, Y+2	; 0x02
 3e2:	56 d0       	rcall	.+172    	; 0x490 <ADC2uint16>
 3e4:	9c 83       	std	Y+4, r25	; 0x04
 3e6:	8b 83       	std	Y+3, r24	; 0x03
 3e8:	1f 5f       	subi	r17, 0xFF	; 255
 3ea:	f5 01       	movw	r30, r10
 3ec:	11 93       	st	Z+, r17
 3ee:	5f 01       	movw	r10, r30
 3f0:	8b 81       	ldd	r24, Y+3	; 0x03
 3f2:	9c 81       	ldd	r25, Y+4	; 0x04
 3f4:	f6 01       	movw	r30, r12
 3f6:	81 93       	st	Z+, r24
 3f8:	91 93       	st	Z+, r25
 3fa:	6f 01       	movw	r12, r30
 3fc:	f7 01       	movw	r30, r14
 3fe:	90 81       	ld	r25, Z
 400:	9f 5f       	subi	r25, 0xFF	; 255
 402:	90 83       	st	Z, r25
 404:	16 32       	cpi	r17, 0x26	; 38
 406:	21 f7       	brne	.-56     	; 0x3d0 <GetSensorData+0x30>
 408:	0f 90       	pop	r0
 40a:	0f 90       	pop	r0
 40c:	0f 90       	pop	r0
 40e:	0f 90       	pop	r0
 410:	df 91       	pop	r29
 412:	cf 91       	pop	r28
 414:	1f 91       	pop	r17
 416:	ff 90       	pop	r15
 418:	ef 90       	pop	r14
 41a:	df 90       	pop	r13
 41c:	cf 90       	pop	r12
 41e:	bf 90       	pop	r11
 420:	af 90       	pop	r10
 422:	08 95       	ret

00000424 <GetMuscleIndex>:
	
}
	
//Implement a function to retrieve the index associated with a specific muscle ID in the slave info constant.
uint8_t GetMuscleIndex( uint8_t muscle_ID_target )
{
 424:	28 2f       	mov	r18, r24
		
	//Create a variable to store the associated muscle index.
	unsigned char k = 0;
			
	//Iterate through each of the muscles in the muscle info structure searching for a matching ID.
	while ( (k < NUM_TOTAL_MUSCLES) && (!(muscle_ID_target == slave_info[k].muscle_ID)) )
 426:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <slave_info>
 42a:	28 17       	cp	r18, r24
 42c:	71 f0       	breq	.+28     	; 0x44a <GetMuscleIndex+0x26>
 42e:	e4 e1       	ldi	r30, 0x14	; 20
 430:	f1 e0       	ldi	r31, 0x01	; 1
	{
		++k;
 432:	81 e0       	ldi	r24, 0x01	; 1
 434:	04 c0       	rjmp	.+8      	; 0x43e <GetMuscleIndex+0x1a>
 436:	8f 5f       	subi	r24, 0xFF	; 255
 438:	32 96       	adiw	r30, 0x02	; 2
		
	//Create a variable to store the associated muscle index.
	unsigned char k = 0;
			
	//Iterate through each of the muscles in the muscle info structure searching for a matching ID.
	while ( (k < NUM_TOTAL_MUSCLES) && (!(muscle_ID_target == slave_info[k].muscle_ID)) )
 43a:	88 31       	cpi	r24, 0x18	; 24
 43c:	21 f0       	breq	.+8      	; 0x446 <GetMuscleIndex+0x22>
 43e:	90 81       	ld	r25, Z
 440:	92 13       	cpse	r25, r18
 442:	f9 cf       	rjmp	.-14     	; 0x436 <GetMuscleIndex+0x12>
 444:	08 95       	ret
	}
			
	//Determine whether a matching index was found.
	if ( (k >= NUM_TOTAL_MUSCLES) )
	{
		k = 255;
 446:	8f ef       	ldi	r24, 0xFF	; 255
 448:	08 95       	ret
		//
	////Return the associated index.
	//return k;
		
	//Create a variable to store the associated muscle index.
	unsigned char k = 0;
 44a:	80 e0       	ldi	r24, 0x00	; 0
	}
			
	//Return the associated index.
	return k;
		
}
 44c:	08 95       	ret

0000044e <byte_array2int>:
 44e:	cf 93       	push	r28
 450:	df 93       	push	r29
 452:	00 d0       	rcall	.+0      	; 0x454 <byte_array2int+0x6>
 454:	cd b7       	in	r28, 0x3d	; 61
 456:	de b7       	in	r29, 0x3e	; 62
 458:	fc 01       	movw	r30, r24
 45a:	20 81       	ld	r18, Z
 45c:	29 83       	std	Y+1, r18	; 0x01
 45e:	81 81       	ldd	r24, Z+1	; 0x01
 460:	8a 83       	std	Y+2, r24	; 0x02
 462:	89 81       	ldd	r24, Y+1	; 0x01
 464:	9a 81       	ldd	r25, Y+2	; 0x02
 466:	0f 90       	pop	r0
 468:	0f 90       	pop	r0
 46a:	df 91       	pop	r29
 46c:	cf 91       	pop	r28
 46e:	08 95       	ret

00000470 <int2byte_array>:
 470:	cf 93       	push	r28
 472:	df 93       	push	r29
 474:	00 d0       	rcall	.+0      	; 0x476 <int2byte_array+0x6>
 476:	cd b7       	in	r28, 0x3d	; 61
 478:	de b7       	in	r29, 0x3e	; 62
 47a:	9a 83       	std	Y+2, r25	; 0x02
 47c:	89 83       	std	Y+1, r24	; 0x01
 47e:	fb 01       	movw	r30, r22
 480:	80 83       	st	Z, r24
 482:	8a 81       	ldd	r24, Y+2	; 0x02
 484:	81 83       	std	Z+1, r24	; 0x01
 486:	0f 90       	pop	r0
 488:	0f 90       	pop	r0
 48a:	df 91       	pop	r29
 48c:	cf 91       	pop	r28
 48e:	08 95       	ret

00000490 <ADC2uint16>:
 490:	00 24       	eor	r0, r0
 492:	96 95       	lsr	r25
 494:	87 95       	ror	r24
 496:	07 94       	ror	r0
 498:	96 95       	lsr	r25
 49a:	87 95       	ror	r24
 49c:	07 94       	ror	r0
 49e:	98 2f       	mov	r25, r24
 4a0:	80 2d       	mov	r24, r0
 4a2:	08 95       	ret

000004a4 <main>:
 4a4:	ed d1       	rcall	.+986    	; 0x880 <SetupMicro>
 4a6:	ff cf       	rjmp	.-2      	; 0x4a6 <main+0x2>

000004a8 <__vector_11>:
 4a8:	1f 92       	push	r1
 4aa:	0f 92       	push	r0
 4ac:	0f b6       	in	r0, 0x3f	; 63
 4ae:	0f 92       	push	r0
 4b0:	11 24       	eor	r1, r1
 4b2:	2f 93       	push	r18
 4b4:	3f 93       	push	r19
 4b6:	4f 93       	push	r20
 4b8:	5f 93       	push	r21
 4ba:	6f 93       	push	r22
 4bc:	7f 93       	push	r23
 4be:	8f 93       	push	r24
 4c0:	9f 93       	push	r25
 4c2:	af 93       	push	r26
 4c4:	bf 93       	push	r27
 4c6:	ef 93       	push	r30
 4c8:	ff 93       	push	r31
 4ca:	cf 93       	push	r28
 4cc:	df 93       	push	r29
 4ce:	cd b7       	in	r28, 0x3d	; 61
 4d0:	de b7       	in	r29, 0x3e	; 62
 4d2:	c6 5e       	subi	r28, 0xE6	; 230
 4d4:	d1 09       	sbc	r29, r1
 4d6:	de bf       	out	0x3e, r29	; 62
 4d8:	cd bf       	out	0x3d, r28	; 61
 4da:	ce 01       	movw	r24, r28
 4dc:	01 96       	adiw	r24, 0x01	; 1
 4de:	56 d1       	rcall	.+684    	; 0x78c <serial_read_matlab_muscle_command_ints>
 4e0:	ce 01       	movw	r24, r28
 4e2:	01 96       	adiw	r24, 0x01	; 1
 4e4:	f2 d1       	rcall	.+996    	; 0x8ca <WriteCommandData2Slaves>
 4e6:	20 98       	cbi	0x04, 0	; 4
 4e8:	ce 01       	movw	r24, r28
 4ea:	8c 58       	subi	r24, 0x8C	; 140
 4ec:	9f 4f       	sbci	r25, 0xFF	; 255
 4ee:	58 df       	rcall	.-336    	; 0x3a0 <GetSensorData>
 4f0:	c6 53       	subi	r28, 0x36	; 54
 4f2:	df 4f       	sbci	r29, 0xFF	; 255
 4f4:	88 81       	ld	r24, Y
 4f6:	99 81       	ldd	r25, Y+1	; 0x01
 4f8:	ca 5c       	subi	r28, 0xCA	; 202
 4fa:	d0 40       	sbci	r29, 0x00	; 0
 4fc:	c7 dd       	rcall	.-1138   	; 0x8c <ADC2DAC>
 4fe:	0a de       	rcall	.-1004   	; 0x114 <write2DAC>
 500:	ce 01       	movw	r24, r28
 502:	8c 58       	subi	r24, 0x8C	; 140
 504:	9f 4f       	sbci	r25, 0xFF	; 255
 506:	55 d0       	rcall	.+170    	; 0x5b2 <serial_write_sensor_data_ints2matlab>
 508:	ca 51       	subi	r28, 0x1A	; 26
 50a:	df 4f       	sbci	r29, 0xFF	; 255
 50c:	0f b6       	in	r0, 0x3f	; 63
 50e:	f8 94       	cli
 510:	de bf       	out	0x3e, r29	; 62
 512:	0f be       	out	0x3f, r0	; 63
 514:	cd bf       	out	0x3d, r28	; 61
 516:	df 91       	pop	r29
 518:	cf 91       	pop	r28
 51a:	ff 91       	pop	r31
 51c:	ef 91       	pop	r30
 51e:	bf 91       	pop	r27
 520:	af 91       	pop	r26
 522:	9f 91       	pop	r25
 524:	8f 91       	pop	r24
 526:	7f 91       	pop	r23
 528:	6f 91       	pop	r22
 52a:	5f 91       	pop	r21
 52c:	4f 91       	pop	r20
 52e:	3f 91       	pop	r19
 530:	2f 91       	pop	r18
 532:	0f 90       	pop	r0
 534:	0f be       	out	0x3f, r0	; 63
 536:	0f 90       	pop	r0
 538:	1f 90       	pop	r1
 53a:	18 95       	reti

0000053c <uart_putchar>:
 53c:	cf 93       	push	r28
 53e:	c8 2f       	mov	r28, r24
 540:	8a 30       	cpi	r24, 0x0A	; 10
 542:	11 f4       	brne	.+4      	; 0x548 <uart_putchar+0xc>
 544:	8d e0       	ldi	r24, 0x0D	; 13
 546:	fa df       	rcall	.-12     	; 0x53c <uart_putchar>
 548:	e0 ec       	ldi	r30, 0xC0	; 192
 54a:	f0 e0       	ldi	r31, 0x00	; 0
 54c:	80 81       	ld	r24, Z
 54e:	85 ff       	sbrs	r24, 5
 550:	fd cf       	rjmp	.-6      	; 0x54c <uart_putchar+0x10>
 552:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__EEPROM_REGION_LENGTH__+0x7f00c6>
 556:	cf 91       	pop	r28
 558:	08 95       	ret

0000055a <uart_getchar>:
 55a:	e0 ec       	ldi	r30, 0xC0	; 192
 55c:	f0 e0       	ldi	r31, 0x00	; 0
 55e:	80 81       	ld	r24, Z
 560:	88 23       	and	r24, r24
 562:	ec f7       	brge	.-6      	; 0x55e <uart_getchar+0x4>
 564:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__EEPROM_REGION_LENGTH__+0x7f00c6>
 568:	08 95       	ret

0000056a <serial_write_start_bytes>:
 56a:	ef 92       	push	r14
 56c:	ff 92       	push	r15
 56e:	0f 93       	push	r16
 570:	1f 93       	push	r17
 572:	cf 93       	push	r28
 574:	df 93       	push	r29
 576:	00 91 48 01 	lds	r16, 0x0148	; 0x800148 <window_size>
 57a:	10 e0       	ldi	r17, 0x00	; 0
 57c:	10 16       	cp	r1, r16
 57e:	11 06       	cpc	r1, r17
 580:	8c f4       	brge	.+34     	; 0x5a4 <serial_write_start_bytes+0x3a>
 582:	c0 e0       	ldi	r28, 0x00	; 0
 584:	d0 e0       	ldi	r29, 0x00	; 0
 586:	0f 2e       	mov	r0, r31
 588:	fc e4       	ldi	r31, 0x4C	; 76
 58a:	ef 2e       	mov	r14, r31
 58c:	f1 e0       	ldi	r31, 0x01	; 1
 58e:	ff 2e       	mov	r15, r31
 590:	f0 2d       	mov	r31, r0
 592:	f7 01       	movw	r30, r14
 594:	62 81       	ldd	r22, Z+2	; 0x02
 596:	73 81       	ldd	r23, Z+3	; 0x03
 598:	8f ef       	ldi	r24, 0xFF	; 255
 59a:	d0 df       	rcall	.-96     	; 0x53c <uart_putchar>
 59c:	21 96       	adiw	r28, 0x01	; 1
 59e:	c0 17       	cp	r28, r16
 5a0:	d1 07       	cpc	r29, r17
 5a2:	b9 f7       	brne	.-18     	; 0x592 <serial_write_start_bytes+0x28>
 5a4:	df 91       	pop	r29
 5a6:	cf 91       	pop	r28
 5a8:	1f 91       	pop	r17
 5aa:	0f 91       	pop	r16
 5ac:	ff 90       	pop	r15
 5ae:	ef 90       	pop	r14
 5b0:	08 95       	ret

000005b2 <serial_write_sensor_data_ints2matlab>:
 5b2:	3f 92       	push	r3
 5b4:	4f 92       	push	r4
 5b6:	5f 92       	push	r5
 5b8:	6f 92       	push	r6
 5ba:	7f 92       	push	r7
 5bc:	8f 92       	push	r8
 5be:	9f 92       	push	r9
 5c0:	af 92       	push	r10
 5c2:	bf 92       	push	r11
 5c4:	cf 92       	push	r12
 5c6:	df 92       	push	r13
 5c8:	ef 92       	push	r14
 5ca:	ff 92       	push	r15
 5cc:	0f 93       	push	r16
 5ce:	1f 93       	push	r17
 5d0:	cf 93       	push	r28
 5d2:	df 93       	push	r29
 5d4:	00 d0       	rcall	.+0      	; 0x5d6 <serial_write_sensor_data_ints2matlab+0x24>
 5d6:	1f 92       	push	r1
 5d8:	cd b7       	in	r28, 0x3d	; 61
 5da:	de b7       	in	r29, 0x3e	; 62
 5dc:	2c 01       	movw	r4, r24
 5de:	c5 df       	rcall	.-118    	; 0x56a <serial_write_start_bytes>
 5e0:	60 91 4e 01 	lds	r22, 0x014E	; 0x80014e <__iob+0x2>
 5e4:	70 91 4f 01 	lds	r23, 0x014F	; 0x80014f <__iob+0x3>
 5e8:	82 01       	movw	r16, r4
 5ea:	0e 58       	subi	r16, 0x8E	; 142
 5ec:	1f 4f       	sbci	r17, 0xFF	; 255
 5ee:	f8 01       	movw	r30, r16
 5f0:	80 81       	ld	r24, Z
 5f2:	a4 df       	rcall	.-184    	; 0x53c <uart_putchar>
 5f4:	f8 01       	movw	r30, r16
 5f6:	80 81       	ld	r24, Z
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	5c 01       	movw	r10, r24
 5fc:	f2 e0       	ldi	r31, 0x02	; 2
 5fe:	af 1a       	sub	r10, r31
 600:	fe ef       	ldi	r31, 0xFE	; 254
 602:	bf 0a       	sbc	r11, r31
 604:	18 16       	cp	r1, r24
 606:	19 06       	cpc	r1, r25
 608:	e4 f5       	brge	.+120    	; 0x682 <serial_write_sensor_data_ints2matlab+0xd0>
 60a:	42 01       	movw	r8, r4
 60c:	26 e2       	ldi	r18, 0x26	; 38
 60e:	82 0e       	add	r8, r18
 610:	91 1c       	adc	r9, r1
 612:	32 01       	movw	r6, r4
 614:	c1 2c       	mov	r12, r1
 616:	d1 2c       	mov	r13, r1
 618:	0f 2e       	mov	r0, r31
 61a:	fc e4       	ldi	r31, 0x4C	; 76
 61c:	ef 2e       	mov	r14, r31
 61e:	f1 e0       	ldi	r31, 0x01	; 1
 620:	ff 2e       	mov	r15, r31
 622:	f0 2d       	mov	r31, r0
 624:	28 01       	movw	r4, r16
 626:	be 01       	movw	r22, r28
 628:	6f 5f       	subi	r22, 0xFF	; 255
 62a:	7f 4f       	sbci	r23, 0xFF	; 255
 62c:	f4 01       	movw	r30, r8
 62e:	81 91       	ld	r24, Z+
 630:	91 91       	ld	r25, Z+
 632:	4f 01       	movw	r8, r30
 634:	1d df       	rcall	.-454    	; 0x470 <int2byte_array>
 636:	f3 01       	movw	r30, r6
 638:	81 91       	ld	r24, Z+
 63a:	3f 01       	movw	r6, r30
 63c:	8b 83       	std	Y+3, r24	; 0x03
 63e:	8b 81       	ldd	r24, Y+3	; 0x03
 640:	f7 01       	movw	r30, r14
 642:	62 81       	ldd	r22, Z+2	; 0x02
 644:	73 81       	ldd	r23, Z+3	; 0x03
 646:	7a df       	rcall	.-268    	; 0x53c <uart_putchar>
 648:	3b 80       	ldd	r3, Y+3	; 0x03
 64a:	89 81       	ldd	r24, Y+1	; 0x01
 64c:	f7 01       	movw	r30, r14
 64e:	62 81       	ldd	r22, Z+2	; 0x02
 650:	73 81       	ldd	r23, Z+3	; 0x03
 652:	74 df       	rcall	.-280    	; 0x53c <uart_putchar>
 654:	09 81       	ldd	r16, Y+1	; 0x01
 656:	10 e0       	ldi	r17, 0x00	; 0
 658:	03 0d       	add	r16, r3
 65a:	11 1d       	adc	r17, r1
 65c:	8a 81       	ldd	r24, Y+2	; 0x02
 65e:	f7 01       	movw	r30, r14
 660:	62 81       	ldd	r22, Z+2	; 0x02
 662:	73 81       	ldd	r23, Z+3	; 0x03
 664:	6b df       	rcall	.-298    	; 0x53c <uart_putchar>
 666:	8a 81       	ldd	r24, Y+2	; 0x02
 668:	08 0f       	add	r16, r24
 66a:	11 1d       	adc	r17, r1
 66c:	a0 0e       	add	r10, r16
 66e:	b1 1e       	adc	r11, r17
 670:	ff ef       	ldi	r31, 0xFF	; 255
 672:	cf 1a       	sub	r12, r31
 674:	df 0a       	sbc	r13, r31
 676:	f2 01       	movw	r30, r4
 678:	80 81       	ld	r24, Z
 67a:	90 e0       	ldi	r25, 0x00	; 0
 67c:	c8 16       	cp	r12, r24
 67e:	d9 06       	cpc	r13, r25
 680:	94 f2       	brlt	.-92     	; 0x626 <serial_write_sensor_data_ints2matlab+0x74>
 682:	60 91 4e 01 	lds	r22, 0x014E	; 0x80014e <__iob+0x2>
 686:	70 91 4f 01 	lds	r23, 0x014F	; 0x80014f <__iob+0x3>
 68a:	8a 2d       	mov	r24, r10
 68c:	57 df       	rcall	.-338    	; 0x53c <uart_putchar>
 68e:	0f 90       	pop	r0
 690:	0f 90       	pop	r0
 692:	0f 90       	pop	r0
 694:	df 91       	pop	r29
 696:	cf 91       	pop	r28
 698:	1f 91       	pop	r17
 69a:	0f 91       	pop	r16
 69c:	ff 90       	pop	r15
 69e:	ef 90       	pop	r14
 6a0:	df 90       	pop	r13
 6a2:	cf 90       	pop	r12
 6a4:	bf 90       	pop	r11
 6a6:	af 90       	pop	r10
 6a8:	9f 90       	pop	r9
 6aa:	8f 90       	pop	r8
 6ac:	7f 90       	pop	r7
 6ae:	6f 90       	pop	r6
 6b0:	5f 90       	pop	r5
 6b2:	4f 90       	pop	r4
 6b4:	3f 90       	pop	r3
 6b6:	08 95       	ret

000006b8 <wait_for_start_sequence>:
 6b8:	4f 92       	push	r4
 6ba:	5f 92       	push	r5
 6bc:	6f 92       	push	r6
 6be:	7f 92       	push	r7
 6c0:	8f 92       	push	r8
 6c2:	9f 92       	push	r9
 6c4:	af 92       	push	r10
 6c6:	bf 92       	push	r11
 6c8:	cf 92       	push	r12
 6ca:	df 92       	push	r13
 6cc:	ef 92       	push	r14
 6ce:	ff 92       	push	r15
 6d0:	0f 93       	push	r16
 6d2:	1f 93       	push	r17
 6d4:	cf 93       	push	r28
 6d6:	df 93       	push	r29
 6d8:	cd b7       	in	r28, 0x3d	; 61
 6da:	de b7       	in	r29, 0x3e	; 62
 6dc:	6d b6       	in	r6, 0x3d	; 61
 6de:	7e b6       	in	r7, 0x3e	; 62
 6e0:	a0 90 48 01 	lds	r10, 0x0148	; 0x800148 <window_size>
 6e4:	b1 2c       	mov	r11, r1
 6e6:	45 01       	movw	r8, r10
 6e8:	8d b7       	in	r24, 0x3d	; 61
 6ea:	9e b7       	in	r25, 0x3e	; 62
 6ec:	8a 19       	sub	r24, r10
 6ee:	9b 09       	sbc	r25, r11
 6f0:	0f b6       	in	r0, 0x3f	; 63
 6f2:	f8 94       	cli
 6f4:	9e bf       	out	0x3e, r25	; 62
 6f6:	0f be       	out	0x3f, r0	; 63
 6f8:	8d bf       	out	0x3d, r24	; 61
 6fa:	01 96       	adiw	r24, 0x01	; 1
 6fc:	6c 01       	movw	r12, r24
 6fe:	1a 14       	cp	r1, r10
 700:	1b 04       	cpc	r1, r11
 702:	04 f5       	brge	.+64     	; 0x744 <wait_for_start_sequence+0x8c>
 704:	fc 01       	movw	r30, r24
 706:	8a 0d       	add	r24, r10
 708:	9b 1d       	adc	r25, r11
 70a:	11 92       	st	Z+, r1
 70c:	e8 17       	cp	r30, r24
 70e:	f9 07       	cpc	r31, r25
 710:	e1 f7       	brne	.-8      	; 0x70a <wait_for_start_sequence+0x52>
 712:	18 c0       	rjmp	.+48     	; 0x744 <wait_for_start_sequence+0x8c>
 714:	82 91       	ld	r24, -Z
 716:	81 83       	std	Z+1, r24	; 0x01
 718:	ee 16       	cp	r14, r30
 71a:	ff 06       	cpc	r15, r31
 71c:	d9 f7       	brne	.-10     	; 0x714 <wait_for_start_sequence+0x5c>
 71e:	1a c0       	rjmp	.+52     	; 0x754 <wait_for_start_sequence+0x9c>
 720:	21 91       	ld	r18, Z+
 722:	85 2d       	mov	r24, r5
 724:	2f 3f       	cpi	r18, 0xFF	; 255
 726:	09 f0       	breq	.+2      	; 0x72a <wait_for_start_sequence+0x72>
 728:	84 2d       	mov	r24, r4
 72a:	98 23       	and	r25, r24
 72c:	e0 17       	cp	r30, r16
 72e:	f1 07       	cpc	r31, r17
 730:	b9 f7       	brne	.-18     	; 0x720 <wait_for_start_sequence+0x68>
 732:	91 11       	cpse	r25, r1
 734:	15 c0       	rjmp	.+42     	; 0x760 <wait_for_start_sequence+0xa8>
 736:	1a 14       	cp	r1, r10
 738:	1b 04       	cpc	r1, r11
 73a:	8c f4       	brge	.+34     	; 0x75e <wait_for_start_sequence+0xa6>
 73c:	f6 01       	movw	r30, r12
 73e:	e8 0d       	add	r30, r8
 740:	f9 1d       	adc	r31, r9
 742:	e8 cf       	rjmp	.-48     	; 0x714 <wait_for_start_sequence+0x5c>
 744:	76 01       	movw	r14, r12
 746:	86 01       	movw	r16, r12
 748:	08 0d       	add	r16, r8
 74a:	19 1d       	adc	r17, r9
 74c:	55 24       	eor	r5, r5
 74e:	53 94       	inc	r5
 750:	41 2c       	mov	r4, r1
 752:	f1 cf       	rjmp	.-30     	; 0x736 <wait_for_start_sequence+0x7e>
 754:	02 df       	rcall	.-508    	; 0x55a <uart_getchar>
 756:	f6 01       	movw	r30, r12
 758:	80 83       	st	Z, r24
 75a:	91 e0       	ldi	r25, 0x01	; 1
 75c:	e1 cf       	rjmp	.-62     	; 0x720 <wait_for_start_sequence+0x68>
 75e:	fd de       	rcall	.-518    	; 0x55a <uart_getchar>
 760:	0f b6       	in	r0, 0x3f	; 63
 762:	f8 94       	cli
 764:	7e be       	out	0x3e, r7	; 62
 766:	0f be       	out	0x3f, r0	; 63
 768:	6d be       	out	0x3d, r6	; 61
 76a:	df 91       	pop	r29
 76c:	cf 91       	pop	r28
 76e:	1f 91       	pop	r17
 770:	0f 91       	pop	r16
 772:	ff 90       	pop	r15
 774:	ef 90       	pop	r14
 776:	df 90       	pop	r13
 778:	cf 90       	pop	r12
 77a:	bf 90       	pop	r11
 77c:	af 90       	pop	r10
 77e:	9f 90       	pop	r9
 780:	8f 90       	pop	r8
 782:	7f 90       	pop	r7
 784:	6f 90       	pop	r6
 786:	5f 90       	pop	r5
 788:	4f 90       	pop	r4
 78a:	08 95       	ret

0000078c <serial_read_matlab_muscle_command_ints>:
 78c:	9f 92       	push	r9
 78e:	af 92       	push	r10
 790:	bf 92       	push	r11
 792:	cf 92       	push	r12
 794:	df 92       	push	r13
 796:	ef 92       	push	r14
 798:	ff 92       	push	r15
 79a:	0f 93       	push	r16
 79c:	1f 93       	push	r17
 79e:	cf 93       	push	r28
 7a0:	df 93       	push	r29
 7a2:	5c 01       	movw	r10, r24
 7a4:	89 df       	rcall	.-238    	; 0x6b8 <wait_for_start_sequence>
 7a6:	d9 de       	rcall	.-590    	; 0x55a <uart_getchar>
 7a8:	98 2e       	mov	r9, r24
 7aa:	88 23       	and	r24, r24
 7ac:	01 f1       	breq	.+64     	; 0x7ee <serial_read_matlab_muscle_command_ints+0x62>
 7ae:	75 01       	movw	r14, r10
 7b0:	85 01       	movw	r16, r10
 7b2:	0a 5d       	subi	r16, 0xDA	; 218
 7b4:	1f 4f       	sbci	r17, 0xFF	; 255
 7b6:	c8 2e       	mov	r12, r24
 7b8:	d1 2c       	mov	r13, r1
 7ba:	83 e1       	ldi	r24, 0x13	; 19
 7bc:	c8 0e       	add	r12, r24
 7be:	d1 1c       	adc	r13, r1
 7c0:	cc 0c       	add	r12, r12
 7c2:	dd 1c       	adc	r13, r13
 7c4:	ca 0c       	add	r12, r10
 7c6:	db 1c       	adc	r13, r11
 7c8:	ca e4       	ldi	r28, 0x4A	; 74
 7ca:	d1 e0       	ldi	r29, 0x01	; 1
 7cc:	c6 de       	rcall	.-628    	; 0x55a <uart_getchar>
 7ce:	f7 01       	movw	r30, r14
 7d0:	81 93       	st	Z+, r24
 7d2:	7f 01       	movw	r14, r30
 7d4:	c2 de       	rcall	.-636    	; 0x55a <uart_getchar>
 7d6:	88 83       	st	Y, r24
 7d8:	c0 de       	rcall	.-640    	; 0x55a <uart_getchar>
 7da:	89 83       	std	Y+1, r24	; 0x01
 7dc:	ce 01       	movw	r24, r28
 7de:	37 de       	rcall	.-914    	; 0x44e <byte_array2int>
 7e0:	f8 01       	movw	r30, r16
 7e2:	81 93       	st	Z+, r24
 7e4:	91 93       	st	Z+, r25
 7e6:	8f 01       	movw	r16, r30
 7e8:	ec 15       	cp	r30, r12
 7ea:	fd 05       	cpc	r31, r13
 7ec:	79 f7       	brne	.-34     	; 0x7cc <serial_read_matlab_muscle_command_ints+0x40>
 7ee:	f5 01       	movw	r30, r10
 7f0:	ee 58       	subi	r30, 0x8E	; 142
 7f2:	ff 4f       	sbci	r31, 0xFF	; 255
 7f4:	90 82       	st	Z, r9
 7f6:	df 91       	pop	r29
 7f8:	cf 91       	pop	r28
 7fa:	1f 91       	pop	r17
 7fc:	0f 91       	pop	r16
 7fe:	ff 90       	pop	r15
 800:	ef 90       	pop	r14
 802:	df 90       	pop	r13
 804:	cf 90       	pop	r12
 806:	bf 90       	pop	r11
 808:	af 90       	pop	r10
 80a:	9f 90       	pop	r9
 80c:	08 95       	ret

0000080e <SetupPins>:
 80e:	8e e2       	ldi	r24, 0x2E	; 46
 810:	84 b9       	out	0x04, r24	; 4
 812:	17 b8       	out	0x07, r1	; 7
 814:	8e ef       	ldi	r24, 0xFE	; 254
 816:	8a b9       	out	0x0a, r24	; 10
 818:	29 9a       	sbi	0x05, 1	; 5
 81a:	2a 9a       	sbi	0x05, 2	; 5
 81c:	2b 98       	cbi	0x05, 3	; 5
 81e:	2d 98       	cbi	0x05, 5	; 5
 820:	5a 98       	cbi	0x0b, 2	; 11
 822:	5b 98       	cbi	0x0b, 3	; 11
 824:	5c 98       	cbi	0x0b, 4	; 11
 826:	5d 98       	cbi	0x0b, 5	; 11
 828:	5e 98       	cbi	0x0b, 6	; 11
 82a:	5f 98       	cbi	0x0b, 7	; 11
 82c:	08 95       	ret

0000082e <SetupSPI>:
 82e:	82 e5       	ldi	r24, 0x52	; 82
 830:	8c bd       	out	0x2c, r24	; 44
 832:	8d b5       	in	r24, 0x2d	; 45
 834:	8e b5       	in	r24, 0x2e	; 46
 836:	08 95       	ret

00000838 <SetupTimerInterrupts>:
 838:	e1 e8       	ldi	r30, 0x81	; 129
 83a:	f0 e0       	ldi	r31, 0x00	; 0
 83c:	80 81       	ld	r24, Z
 83e:	88 60       	ori	r24, 0x08	; 8
 840:	80 83       	st	Z, r24
 842:	af e6       	ldi	r26, 0x6F	; 111
 844:	b0 e0       	ldi	r27, 0x00	; 0
 846:	8c 91       	ld	r24, X
 848:	82 60       	ori	r24, 0x02	; 2
 84a:	8c 93       	st	X, r24
 84c:	78 94       	sei
 84e:	8f e7       	ldi	r24, 0x7F	; 127
 850:	9e e3       	ldi	r25, 0x3E	; 62
 852:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__EEPROM_REGION_LENGTH__+0x7f0089>
 856:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__EEPROM_REGION_LENGTH__+0x7f0088>
 85a:	80 81       	ld	r24, Z
 85c:	81 60       	ori	r24, 0x01	; 1
 85e:	80 83       	st	Z, r24
 860:	08 95       	ret

00000862 <SetupUSART>:
 862:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__EEPROM_REGION_LENGTH__+0x7f00c5>
 866:	80 e1       	ldi	r24, 0x10	; 16
 868:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__EEPROM_REGION_LENGTH__+0x7f00c4>
 86c:	88 e1       	ldi	r24, 0x18	; 24
 86e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__EEPROM_REGION_LENGTH__+0x7f00c1>
 872:	82 e0       	ldi	r24, 0x02	; 2
 874:	91 e0       	ldi	r25, 0x01	; 1
 876:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <__iob+0x3>
 87a:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <__iob+0x2>
 87e:	08 95       	ret

00000880 <SetupMicro>:
 880:	c6 df       	rcall	.-116    	; 0x80e <SetupPins>
 882:	87 e8       	ldi	r24, 0x87	; 135
 884:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__EEPROM_REGION_LENGTH__+0x7f007a>
 888:	d2 df       	rcall	.-92     	; 0x82e <SetupSPI>
 88a:	d6 df       	rcall	.-84     	; 0x838 <SetupTimerInterrupts>
 88c:	ea df       	rcall	.-44     	; 0x862 <SetupUSART>
 88e:	08 95       	ret

00000890 <spi_write>:
 890:	8e bd       	out	0x2e, r24	; 46
 892:	0d b4       	in	r0, 0x2d	; 45
 894:	07 fe       	sbrs	r0, 7
 896:	fd cf       	rjmp	.-6      	; 0x892 <spi_write+0x2>
 898:	08 95       	ret

0000089a <spi_read_write>:
 89a:	8e bd       	out	0x2e, r24	; 46
 89c:	0d b4       	in	r0, 0x2d	; 45
 89e:	07 fe       	sbrs	r0, 7
 8a0:	fd cf       	rjmp	.-6      	; 0x89c <spi_read_write+0x2>
 8a2:	8e b5       	in	r24, 0x2e	; 46
 8a4:	08 95       	ret

000008a6 <write2slave>:
 8a6:	cf 93       	push	r28
 8a8:	df 93       	push	r29
 8aa:	d8 2f       	mov	r29, r24
 8ac:	c9 2f       	mov	r28, r25
 8ae:	85 e2       	ldi	r24, 0x25	; 37
 8b0:	86 0f       	add	r24, r22
 8b2:	53 dd       	rcall	.-1370   	; 0x35a <set_multiplexer_channel>
 8b4:	20 9a       	sbi	0x04, 0	; 4
 8b6:	28 98       	cbi	0x05, 0	; 5
 8b8:	8d 2f       	mov	r24, r29
 8ba:	ef df       	rcall	.-34     	; 0x89a <spi_read_write>
 8bc:	8c 2f       	mov	r24, r28
 8be:	ed df       	rcall	.-38     	; 0x89a <spi_read_write>
 8c0:	28 9a       	sbi	0x05, 0	; 5
 8c2:	20 98       	cbi	0x04, 0	; 4
 8c4:	df 91       	pop	r29
 8c6:	cf 91       	pop	r28
 8c8:	08 95       	ret

000008ca <WriteCommandData2Slaves>:
 8ca:	af 92       	push	r10
 8cc:	bf 92       	push	r11
 8ce:	cf 92       	push	r12
 8d0:	df 92       	push	r13
 8d2:	ef 92       	push	r14
 8d4:	ff 92       	push	r15
 8d6:	0f 93       	push	r16
 8d8:	1f 93       	push	r17
 8da:	cf 93       	push	r28
 8dc:	df 93       	push	r29
 8de:	fc 01       	movw	r30, r24
 8e0:	ee 58       	subi	r30, 0x8E	; 142
 8e2:	ff 4f       	sbci	r31, 0xFF	; 255
 8e4:	20 81       	ld	r18, Z
 8e6:	d1 2c       	mov	r13, r1
 8e8:	d2 16       	cp	r13, r18
 8ea:	a0 f5       	brcc	.+104    	; 0x954 <WriteCommandData2Slaves+0x8a>
 8ec:	ec 01       	movw	r28, r24
 8ee:	e0 90 10 01 	lds	r14, 0x0110	; 0x800110 <activation_threshold>
 8f2:	f0 90 11 01 	lds	r15, 0x0111	; 0x800111 <activation_threshold+0x1>
 8f6:	8f 01       	movw	r16, r30
 8f8:	fe 01       	movw	r30, r28
 8fa:	ed 0d       	add	r30, r13
 8fc:	f1 1d       	adc	r31, r1
 8fe:	80 81       	ld	r24, Z
 900:	91 dd       	rcall	.-1246   	; 0x424 <GetMuscleIndex>
 902:	8f 3f       	cpi	r24, 0xFF	; 255
 904:	11 f1       	breq	.+68     	; 0x94a <WriteCommandData2Slaves+0x80>
 906:	e8 2f       	mov	r30, r24
 908:	f0 e0       	ldi	r31, 0x00	; 0
 90a:	ee 0f       	add	r30, r30
 90c:	ff 1f       	adc	r31, r31
 90e:	ee 5e       	subi	r30, 0xEE	; 238
 910:	fe 4f       	sbci	r31, 0xFE	; 254
 912:	c1 80       	ldd	r12, Z+1	; 0x01
 914:	ad 2c       	mov	r10, r13
 916:	b1 2c       	mov	r11, r1
 918:	aa 0c       	add	r10, r10
 91a:	bb 1c       	adc	r11, r11
 91c:	ac 0e       	add	r10, r28
 91e:	bd 1e       	adc	r11, r29
 920:	6c 2d       	mov	r22, r12
 922:	f5 01       	movw	r30, r10
 924:	86 a1       	ldd	r24, Z+38	; 0x26
 926:	97 a1       	ldd	r25, Z+39	; 0x27
 928:	be df       	rcall	.-132    	; 0x8a6 <write2slave>
 92a:	f2 e0       	ldi	r31, 0x02	; 2
 92c:	cf 12       	cpse	r12, r31
 92e:	0d c0       	rjmp	.+26     	; 0x94a <WriteCommandData2Slaves+0x80>
 930:	f5 01       	movw	r30, r10
 932:	86 a1       	ldd	r24, Z+38	; 0x26
 934:	97 a1       	ldd	r25, Z+39	; 0x27
 936:	e8 16       	cp	r14, r24
 938:	f9 06       	cpc	r15, r25
 93a:	20 f4       	brcc	.+8      	; 0x944 <WriteCommandData2Slaves+0x7a>
 93c:	8f ef       	ldi	r24, 0xFF	; 255
 93e:	9f e0       	ldi	r25, 0x0F	; 15
 940:	e9 db       	rcall	.-2094   	; 0x114 <write2DAC>
 942:	03 c0       	rjmp	.+6      	; 0x94a <WriteCommandData2Slaves+0x80>
 944:	80 e0       	ldi	r24, 0x00	; 0
 946:	90 e0       	ldi	r25, 0x00	; 0
 948:	e5 db       	rcall	.-2102   	; 0x114 <write2DAC>
 94a:	d3 94       	inc	r13
 94c:	f8 01       	movw	r30, r16
 94e:	80 81       	ld	r24, Z
 950:	d8 16       	cp	r13, r24
 952:	90 f2       	brcs	.-92     	; 0x8f8 <WriteCommandData2Slaves+0x2e>
 954:	df 91       	pop	r29
 956:	cf 91       	pop	r28
 958:	1f 91       	pop	r17
 95a:	0f 91       	pop	r16
 95c:	ff 90       	pop	r15
 95e:	ef 90       	pop	r14
 960:	df 90       	pop	r13
 962:	cf 90       	pop	r12
 964:	bf 90       	pop	r11
 966:	af 90       	pop	r10
 968:	08 95       	ret

0000096a <__fixunssfsi>:
 96a:	ac d0       	rcall	.+344    	; 0xac4 <__fp_splitA>
 96c:	88 f0       	brcs	.+34     	; 0x990 <__fixunssfsi+0x26>
 96e:	9f 57       	subi	r25, 0x7F	; 127
 970:	90 f0       	brcs	.+36     	; 0x996 <__fixunssfsi+0x2c>
 972:	b9 2f       	mov	r27, r25
 974:	99 27       	eor	r25, r25
 976:	b7 51       	subi	r27, 0x17	; 23
 978:	a0 f0       	brcs	.+40     	; 0x9a2 <__fixunssfsi+0x38>
 97a:	d1 f0       	breq	.+52     	; 0x9b0 <__fixunssfsi+0x46>
 97c:	66 0f       	add	r22, r22
 97e:	77 1f       	adc	r23, r23
 980:	88 1f       	adc	r24, r24
 982:	99 1f       	adc	r25, r25
 984:	1a f0       	brmi	.+6      	; 0x98c <__fixunssfsi+0x22>
 986:	ba 95       	dec	r27
 988:	c9 f7       	brne	.-14     	; 0x97c <__fixunssfsi+0x12>
 98a:	12 c0       	rjmp	.+36     	; 0x9b0 <__fixunssfsi+0x46>
 98c:	b1 30       	cpi	r27, 0x01	; 1
 98e:	81 f0       	breq	.+32     	; 0x9b0 <__fixunssfsi+0x46>
 990:	ca d0       	rcall	.+404    	; 0xb26 <__fp_zero>
 992:	b1 e0       	ldi	r27, 0x01	; 1
 994:	08 95       	ret
 996:	c7 c0       	rjmp	.+398    	; 0xb26 <__fp_zero>
 998:	67 2f       	mov	r22, r23
 99a:	78 2f       	mov	r23, r24
 99c:	88 27       	eor	r24, r24
 99e:	b8 5f       	subi	r27, 0xF8	; 248
 9a0:	39 f0       	breq	.+14     	; 0x9b0 <__fixunssfsi+0x46>
 9a2:	b9 3f       	cpi	r27, 0xF9	; 249
 9a4:	cc f3       	brlt	.-14     	; 0x998 <__fixunssfsi+0x2e>
 9a6:	86 95       	lsr	r24
 9a8:	77 95       	ror	r23
 9aa:	67 95       	ror	r22
 9ac:	b3 95       	inc	r27
 9ae:	d9 f7       	brne	.-10     	; 0x9a6 <__fixunssfsi+0x3c>
 9b0:	3e f4       	brtc	.+14     	; 0x9c0 <__fixunssfsi+0x56>
 9b2:	90 95       	com	r25
 9b4:	80 95       	com	r24
 9b6:	70 95       	com	r23
 9b8:	61 95       	neg	r22
 9ba:	7f 4f       	sbci	r23, 0xFF	; 255
 9bc:	8f 4f       	sbci	r24, 0xFF	; 255
 9be:	9f 4f       	sbci	r25, 0xFF	; 255
 9c0:	08 95       	ret

000009c2 <__floatunsisf>:
 9c2:	e8 94       	clt
 9c4:	09 c0       	rjmp	.+18     	; 0x9d8 <__floatsisf+0x12>

000009c6 <__floatsisf>:
 9c6:	97 fb       	bst	r25, 7
 9c8:	3e f4       	brtc	.+14     	; 0x9d8 <__floatsisf+0x12>
 9ca:	90 95       	com	r25
 9cc:	80 95       	com	r24
 9ce:	70 95       	com	r23
 9d0:	61 95       	neg	r22
 9d2:	7f 4f       	sbci	r23, 0xFF	; 255
 9d4:	8f 4f       	sbci	r24, 0xFF	; 255
 9d6:	9f 4f       	sbci	r25, 0xFF	; 255
 9d8:	99 23       	and	r25, r25
 9da:	a9 f0       	breq	.+42     	; 0xa06 <__floatsisf+0x40>
 9dc:	f9 2f       	mov	r31, r25
 9de:	96 e9       	ldi	r25, 0x96	; 150
 9e0:	bb 27       	eor	r27, r27
 9e2:	93 95       	inc	r25
 9e4:	f6 95       	lsr	r31
 9e6:	87 95       	ror	r24
 9e8:	77 95       	ror	r23
 9ea:	67 95       	ror	r22
 9ec:	b7 95       	ror	r27
 9ee:	f1 11       	cpse	r31, r1
 9f0:	f8 cf       	rjmp	.-16     	; 0x9e2 <__floatsisf+0x1c>
 9f2:	fa f4       	brpl	.+62     	; 0xa32 <__floatsisf+0x6c>
 9f4:	bb 0f       	add	r27, r27
 9f6:	11 f4       	brne	.+4      	; 0x9fc <__floatsisf+0x36>
 9f8:	60 ff       	sbrs	r22, 0
 9fa:	1b c0       	rjmp	.+54     	; 0xa32 <__floatsisf+0x6c>
 9fc:	6f 5f       	subi	r22, 0xFF	; 255
 9fe:	7f 4f       	sbci	r23, 0xFF	; 255
 a00:	8f 4f       	sbci	r24, 0xFF	; 255
 a02:	9f 4f       	sbci	r25, 0xFF	; 255
 a04:	16 c0       	rjmp	.+44     	; 0xa32 <__floatsisf+0x6c>
 a06:	88 23       	and	r24, r24
 a08:	11 f0       	breq	.+4      	; 0xa0e <__floatsisf+0x48>
 a0a:	96 e9       	ldi	r25, 0x96	; 150
 a0c:	11 c0       	rjmp	.+34     	; 0xa30 <__floatsisf+0x6a>
 a0e:	77 23       	and	r23, r23
 a10:	21 f0       	breq	.+8      	; 0xa1a <__floatsisf+0x54>
 a12:	9e e8       	ldi	r25, 0x8E	; 142
 a14:	87 2f       	mov	r24, r23
 a16:	76 2f       	mov	r23, r22
 a18:	05 c0       	rjmp	.+10     	; 0xa24 <__floatsisf+0x5e>
 a1a:	66 23       	and	r22, r22
 a1c:	71 f0       	breq	.+28     	; 0xa3a <__floatsisf+0x74>
 a1e:	96 e8       	ldi	r25, 0x86	; 134
 a20:	86 2f       	mov	r24, r22
 a22:	70 e0       	ldi	r23, 0x00	; 0
 a24:	60 e0       	ldi	r22, 0x00	; 0
 a26:	2a f0       	brmi	.+10     	; 0xa32 <__floatsisf+0x6c>
 a28:	9a 95       	dec	r25
 a2a:	66 0f       	add	r22, r22
 a2c:	77 1f       	adc	r23, r23
 a2e:	88 1f       	adc	r24, r24
 a30:	da f7       	brpl	.-10     	; 0xa28 <__floatsisf+0x62>
 a32:	88 0f       	add	r24, r24
 a34:	96 95       	lsr	r25
 a36:	87 95       	ror	r24
 a38:	97 f9       	bld	r25, 7
 a3a:	08 95       	ret

00000a3c <floor>:
 a3c:	5d d0       	rcall	.+186    	; 0xaf8 <__fp_trunc>
 a3e:	80 f0       	brcs	.+32     	; 0xa60 <floor+0x24>
 a40:	9f 37       	cpi	r25, 0x7F	; 127
 a42:	40 f4       	brcc	.+16     	; 0xa54 <floor+0x18>
 a44:	91 11       	cpse	r25, r1
 a46:	0e f0       	brts	.+2      	; 0xa4a <floor+0xe>
 a48:	6f c0       	rjmp	.+222    	; 0xb28 <__fp_szero>
 a4a:	60 e0       	ldi	r22, 0x00	; 0
 a4c:	70 e0       	ldi	r23, 0x00	; 0
 a4e:	80 e8       	ldi	r24, 0x80	; 128
 a50:	9f eb       	ldi	r25, 0xBF	; 191
 a52:	08 95       	ret
 a54:	26 f4       	brtc	.+8      	; 0xa5e <floor+0x22>
 a56:	1b 16       	cp	r1, r27
 a58:	61 1d       	adc	r22, r1
 a5a:	71 1d       	adc	r23, r1
 a5c:	81 1d       	adc	r24, r1
 a5e:	01 c0       	rjmp	.+2      	; 0xa62 <__fp_mintl>
 a60:	1b c0       	rjmp	.+54     	; 0xa98 <__fp_mpack>

00000a62 <__fp_mintl>:
 a62:	88 23       	and	r24, r24
 a64:	71 f4       	brne	.+28     	; 0xa82 <__fp_mintl+0x20>
 a66:	77 23       	and	r23, r23
 a68:	21 f0       	breq	.+8      	; 0xa72 <__fp_mintl+0x10>
 a6a:	98 50       	subi	r25, 0x08	; 8
 a6c:	87 2b       	or	r24, r23
 a6e:	76 2f       	mov	r23, r22
 a70:	07 c0       	rjmp	.+14     	; 0xa80 <__fp_mintl+0x1e>
 a72:	66 23       	and	r22, r22
 a74:	11 f4       	brne	.+4      	; 0xa7a <__fp_mintl+0x18>
 a76:	99 27       	eor	r25, r25
 a78:	0d c0       	rjmp	.+26     	; 0xa94 <__fp_mintl+0x32>
 a7a:	90 51       	subi	r25, 0x10	; 16
 a7c:	86 2b       	or	r24, r22
 a7e:	70 e0       	ldi	r23, 0x00	; 0
 a80:	60 e0       	ldi	r22, 0x00	; 0
 a82:	2a f0       	brmi	.+10     	; 0xa8e <__fp_mintl+0x2c>
 a84:	9a 95       	dec	r25
 a86:	66 0f       	add	r22, r22
 a88:	77 1f       	adc	r23, r23
 a8a:	88 1f       	adc	r24, r24
 a8c:	da f7       	brpl	.-10     	; 0xa84 <__fp_mintl+0x22>
 a8e:	88 0f       	add	r24, r24
 a90:	96 95       	lsr	r25
 a92:	87 95       	ror	r24
 a94:	97 f9       	bld	r25, 7
 a96:	08 95       	ret

00000a98 <__fp_mpack>:
 a98:	9f 3f       	cpi	r25, 0xFF	; 255
 a9a:	31 f0       	breq	.+12     	; 0xaa8 <__fp_mpack_finite+0xc>

00000a9c <__fp_mpack_finite>:
 a9c:	91 50       	subi	r25, 0x01	; 1
 a9e:	20 f4       	brcc	.+8      	; 0xaa8 <__fp_mpack_finite+0xc>
 aa0:	87 95       	ror	r24
 aa2:	77 95       	ror	r23
 aa4:	67 95       	ror	r22
 aa6:	b7 95       	ror	r27
 aa8:	88 0f       	add	r24, r24
 aaa:	91 1d       	adc	r25, r1
 aac:	96 95       	lsr	r25
 aae:	87 95       	ror	r24
 ab0:	97 f9       	bld	r25, 7
 ab2:	08 95       	ret

00000ab4 <__fp_split3>:
 ab4:	57 fd       	sbrc	r21, 7
 ab6:	90 58       	subi	r25, 0x80	; 128
 ab8:	44 0f       	add	r20, r20
 aba:	55 1f       	adc	r21, r21
 abc:	59 f0       	breq	.+22     	; 0xad4 <__fp_splitA+0x10>
 abe:	5f 3f       	cpi	r21, 0xFF	; 255
 ac0:	71 f0       	breq	.+28     	; 0xade <__fp_splitA+0x1a>
 ac2:	47 95       	ror	r20

00000ac4 <__fp_splitA>:
 ac4:	88 0f       	add	r24, r24
 ac6:	97 fb       	bst	r25, 7
 ac8:	99 1f       	adc	r25, r25
 aca:	61 f0       	breq	.+24     	; 0xae4 <__fp_splitA+0x20>
 acc:	9f 3f       	cpi	r25, 0xFF	; 255
 ace:	79 f0       	breq	.+30     	; 0xaee <__fp_splitA+0x2a>
 ad0:	87 95       	ror	r24
 ad2:	08 95       	ret
 ad4:	12 16       	cp	r1, r18
 ad6:	13 06       	cpc	r1, r19
 ad8:	14 06       	cpc	r1, r20
 ada:	55 1f       	adc	r21, r21
 adc:	f2 cf       	rjmp	.-28     	; 0xac2 <__fp_split3+0xe>
 ade:	46 95       	lsr	r20
 ae0:	f1 df       	rcall	.-30     	; 0xac4 <__fp_splitA>
 ae2:	08 c0       	rjmp	.+16     	; 0xaf4 <__fp_splitA+0x30>
 ae4:	16 16       	cp	r1, r22
 ae6:	17 06       	cpc	r1, r23
 ae8:	18 06       	cpc	r1, r24
 aea:	99 1f       	adc	r25, r25
 aec:	f1 cf       	rjmp	.-30     	; 0xad0 <__fp_splitA+0xc>
 aee:	86 95       	lsr	r24
 af0:	71 05       	cpc	r23, r1
 af2:	61 05       	cpc	r22, r1
 af4:	08 94       	sec
 af6:	08 95       	ret

00000af8 <__fp_trunc>:
 af8:	e5 df       	rcall	.-54     	; 0xac4 <__fp_splitA>
 afa:	a0 f0       	brcs	.+40     	; 0xb24 <__fp_trunc+0x2c>
 afc:	be e7       	ldi	r27, 0x7E	; 126
 afe:	b9 17       	cp	r27, r25
 b00:	88 f4       	brcc	.+34     	; 0xb24 <__fp_trunc+0x2c>
 b02:	bb 27       	eor	r27, r27
 b04:	9f 38       	cpi	r25, 0x8F	; 143
 b06:	60 f4       	brcc	.+24     	; 0xb20 <__fp_trunc+0x28>
 b08:	16 16       	cp	r1, r22
 b0a:	b1 1d       	adc	r27, r1
 b0c:	67 2f       	mov	r22, r23
 b0e:	78 2f       	mov	r23, r24
 b10:	88 27       	eor	r24, r24
 b12:	98 5f       	subi	r25, 0xF8	; 248
 b14:	f7 cf       	rjmp	.-18     	; 0xb04 <__fp_trunc+0xc>
 b16:	86 95       	lsr	r24
 b18:	77 95       	ror	r23
 b1a:	67 95       	ror	r22
 b1c:	b1 1d       	adc	r27, r1
 b1e:	93 95       	inc	r25
 b20:	96 39       	cpi	r25, 0x96	; 150
 b22:	c8 f3       	brcs	.-14     	; 0xb16 <__fp_trunc+0x1e>
 b24:	08 95       	ret

00000b26 <__fp_zero>:
 b26:	e8 94       	clt

00000b28 <__fp_szero>:
 b28:	bb 27       	eor	r27, r27
 b2a:	66 27       	eor	r22, r22
 b2c:	77 27       	eor	r23, r23
 b2e:	cb 01       	movw	r24, r22
 b30:	97 f9       	bld	r25, 7
 b32:	08 95       	ret

00000b34 <__mulsf3>:
 b34:	0b d0       	rcall	.+22     	; 0xb4c <__mulsf3x>
 b36:	98 c0       	rjmp	.+304    	; 0xc68 <__fp_round>
 b38:	89 d0       	rcall	.+274    	; 0xc4c <__fp_pscA>
 b3a:	28 f0       	brcs	.+10     	; 0xb46 <__mulsf3+0x12>
 b3c:	8e d0       	rcall	.+284    	; 0xc5a <__fp_pscB>
 b3e:	18 f0       	brcs	.+6      	; 0xb46 <__mulsf3+0x12>
 b40:	95 23       	and	r25, r21
 b42:	09 f0       	breq	.+2      	; 0xb46 <__mulsf3+0x12>
 b44:	7a c0       	rjmp	.+244    	; 0xc3a <__fp_inf>
 b46:	7f c0       	rjmp	.+254    	; 0xc46 <__fp_nan>
 b48:	11 24       	eor	r1, r1
 b4a:	ee cf       	rjmp	.-36     	; 0xb28 <__fp_szero>

00000b4c <__mulsf3x>:
 b4c:	b3 df       	rcall	.-154    	; 0xab4 <__fp_split3>
 b4e:	a0 f3       	brcs	.-24     	; 0xb38 <__mulsf3+0x4>

00000b50 <__mulsf3_pse>:
 b50:	95 9f       	mul	r25, r21
 b52:	d1 f3       	breq	.-12     	; 0xb48 <__mulsf3+0x14>
 b54:	95 0f       	add	r25, r21
 b56:	50 e0       	ldi	r21, 0x00	; 0
 b58:	55 1f       	adc	r21, r21
 b5a:	62 9f       	mul	r22, r18
 b5c:	f0 01       	movw	r30, r0
 b5e:	72 9f       	mul	r23, r18
 b60:	bb 27       	eor	r27, r27
 b62:	f0 0d       	add	r31, r0
 b64:	b1 1d       	adc	r27, r1
 b66:	63 9f       	mul	r22, r19
 b68:	aa 27       	eor	r26, r26
 b6a:	f0 0d       	add	r31, r0
 b6c:	b1 1d       	adc	r27, r1
 b6e:	aa 1f       	adc	r26, r26
 b70:	64 9f       	mul	r22, r20
 b72:	66 27       	eor	r22, r22
 b74:	b0 0d       	add	r27, r0
 b76:	a1 1d       	adc	r26, r1
 b78:	66 1f       	adc	r22, r22
 b7a:	82 9f       	mul	r24, r18
 b7c:	22 27       	eor	r18, r18
 b7e:	b0 0d       	add	r27, r0
 b80:	a1 1d       	adc	r26, r1
 b82:	62 1f       	adc	r22, r18
 b84:	73 9f       	mul	r23, r19
 b86:	b0 0d       	add	r27, r0
 b88:	a1 1d       	adc	r26, r1
 b8a:	62 1f       	adc	r22, r18
 b8c:	83 9f       	mul	r24, r19
 b8e:	a0 0d       	add	r26, r0
 b90:	61 1d       	adc	r22, r1
 b92:	22 1f       	adc	r18, r18
 b94:	74 9f       	mul	r23, r20
 b96:	33 27       	eor	r19, r19
 b98:	a0 0d       	add	r26, r0
 b9a:	61 1d       	adc	r22, r1
 b9c:	23 1f       	adc	r18, r19
 b9e:	84 9f       	mul	r24, r20
 ba0:	60 0d       	add	r22, r0
 ba2:	21 1d       	adc	r18, r1
 ba4:	82 2f       	mov	r24, r18
 ba6:	76 2f       	mov	r23, r22
 ba8:	6a 2f       	mov	r22, r26
 baa:	11 24       	eor	r1, r1
 bac:	9f 57       	subi	r25, 0x7F	; 127
 bae:	50 40       	sbci	r21, 0x00	; 0
 bb0:	8a f0       	brmi	.+34     	; 0xbd4 <__mulsf3_pse+0x84>
 bb2:	e1 f0       	breq	.+56     	; 0xbec <__mulsf3_pse+0x9c>
 bb4:	88 23       	and	r24, r24
 bb6:	4a f0       	brmi	.+18     	; 0xbca <__mulsf3_pse+0x7a>
 bb8:	ee 0f       	add	r30, r30
 bba:	ff 1f       	adc	r31, r31
 bbc:	bb 1f       	adc	r27, r27
 bbe:	66 1f       	adc	r22, r22
 bc0:	77 1f       	adc	r23, r23
 bc2:	88 1f       	adc	r24, r24
 bc4:	91 50       	subi	r25, 0x01	; 1
 bc6:	50 40       	sbci	r21, 0x00	; 0
 bc8:	a9 f7       	brne	.-22     	; 0xbb4 <__mulsf3_pse+0x64>
 bca:	9e 3f       	cpi	r25, 0xFE	; 254
 bcc:	51 05       	cpc	r21, r1
 bce:	70 f0       	brcs	.+28     	; 0xbec <__mulsf3_pse+0x9c>
 bd0:	34 c0       	rjmp	.+104    	; 0xc3a <__fp_inf>
 bd2:	aa cf       	rjmp	.-172    	; 0xb28 <__fp_szero>
 bd4:	5f 3f       	cpi	r21, 0xFF	; 255
 bd6:	ec f3       	brlt	.-6      	; 0xbd2 <__mulsf3_pse+0x82>
 bd8:	98 3e       	cpi	r25, 0xE8	; 232
 bda:	dc f3       	brlt	.-10     	; 0xbd2 <__mulsf3_pse+0x82>
 bdc:	86 95       	lsr	r24
 bde:	77 95       	ror	r23
 be0:	67 95       	ror	r22
 be2:	b7 95       	ror	r27
 be4:	f7 95       	ror	r31
 be6:	e7 95       	ror	r30
 be8:	9f 5f       	subi	r25, 0xFF	; 255
 bea:	c1 f7       	brne	.-16     	; 0xbdc <__mulsf3_pse+0x8c>
 bec:	fe 2b       	or	r31, r30
 bee:	88 0f       	add	r24, r24
 bf0:	91 1d       	adc	r25, r1
 bf2:	96 95       	lsr	r25
 bf4:	87 95       	ror	r24
 bf6:	97 f9       	bld	r25, 7
 bf8:	08 95       	ret

00000bfa <round>:
 bfa:	64 df       	rcall	.-312    	; 0xac4 <__fp_splitA>
 bfc:	e0 f0       	brcs	.+56     	; 0xc36 <round+0x3c>
 bfe:	9e 37       	cpi	r25, 0x7E	; 126
 c00:	d8 f0       	brcs	.+54     	; 0xc38 <round+0x3e>
 c02:	96 39       	cpi	r25, 0x96	; 150
 c04:	b8 f4       	brcc	.+46     	; 0xc34 <round+0x3a>
 c06:	9e 38       	cpi	r25, 0x8E	; 142
 c08:	48 f4       	brcc	.+18     	; 0xc1c <round+0x22>
 c0a:	67 2f       	mov	r22, r23
 c0c:	78 2f       	mov	r23, r24
 c0e:	88 27       	eor	r24, r24
 c10:	98 5f       	subi	r25, 0xF8	; 248
 c12:	f9 cf       	rjmp	.-14     	; 0xc06 <round+0xc>
 c14:	86 95       	lsr	r24
 c16:	77 95       	ror	r23
 c18:	67 95       	ror	r22
 c1a:	93 95       	inc	r25
 c1c:	95 39       	cpi	r25, 0x95	; 149
 c1e:	d0 f3       	brcs	.-12     	; 0xc14 <round+0x1a>
 c20:	b6 2f       	mov	r27, r22
 c22:	b1 70       	andi	r27, 0x01	; 1
 c24:	6b 0f       	add	r22, r27
 c26:	71 1d       	adc	r23, r1
 c28:	81 1d       	adc	r24, r1
 c2a:	20 f4       	brcc	.+8      	; 0xc34 <round+0x3a>
 c2c:	87 95       	ror	r24
 c2e:	77 95       	ror	r23
 c30:	67 95       	ror	r22
 c32:	93 95       	inc	r25
 c34:	16 cf       	rjmp	.-468    	; 0xa62 <__fp_mintl>
 c36:	30 cf       	rjmp	.-416    	; 0xa98 <__fp_mpack>
 c38:	77 cf       	rjmp	.-274    	; 0xb28 <__fp_szero>

00000c3a <__fp_inf>:
 c3a:	97 f9       	bld	r25, 7
 c3c:	9f 67       	ori	r25, 0x7F	; 127
 c3e:	80 e8       	ldi	r24, 0x80	; 128
 c40:	70 e0       	ldi	r23, 0x00	; 0
 c42:	60 e0       	ldi	r22, 0x00	; 0
 c44:	08 95       	ret

00000c46 <__fp_nan>:
 c46:	9f ef       	ldi	r25, 0xFF	; 255
 c48:	80 ec       	ldi	r24, 0xC0	; 192
 c4a:	08 95       	ret

00000c4c <__fp_pscA>:
 c4c:	00 24       	eor	r0, r0
 c4e:	0a 94       	dec	r0
 c50:	16 16       	cp	r1, r22
 c52:	17 06       	cpc	r1, r23
 c54:	18 06       	cpc	r1, r24
 c56:	09 06       	cpc	r0, r25
 c58:	08 95       	ret

00000c5a <__fp_pscB>:
 c5a:	00 24       	eor	r0, r0
 c5c:	0a 94       	dec	r0
 c5e:	12 16       	cp	r1, r18
 c60:	13 06       	cpc	r1, r19
 c62:	14 06       	cpc	r1, r20
 c64:	05 06       	cpc	r0, r21
 c66:	08 95       	ret

00000c68 <__fp_round>:
 c68:	09 2e       	mov	r0, r25
 c6a:	03 94       	inc	r0
 c6c:	00 0c       	add	r0, r0
 c6e:	11 f4       	brne	.+4      	; 0xc74 <__fp_round+0xc>
 c70:	88 23       	and	r24, r24
 c72:	52 f0       	brmi	.+20     	; 0xc88 <__fp_round+0x20>
 c74:	bb 0f       	add	r27, r27
 c76:	40 f4       	brcc	.+16     	; 0xc88 <__fp_round+0x20>
 c78:	bf 2b       	or	r27, r31
 c7a:	11 f4       	brne	.+4      	; 0xc80 <__fp_round+0x18>
 c7c:	60 ff       	sbrs	r22, 0
 c7e:	04 c0       	rjmp	.+8      	; 0xc88 <__fp_round+0x20>
 c80:	6f 5f       	subi	r22, 0xFF	; 255
 c82:	7f 4f       	sbci	r23, 0xFF	; 255
 c84:	8f 4f       	sbci	r24, 0xFF	; 255
 c86:	9f 4f       	sbci	r25, 0xFF	; 255
 c88:	08 95       	ret

00000c8a <_exit>:
 c8a:	f8 94       	cli

00000c8c <__stop_program>:
 c8c:	ff cf       	rjmp	.-2      	; 0xc8c <__stop_program>
